# -*- coding: utf-8 -*-
"""
Created on Wed Jun 17 15:10:21 2020

@author: Gokhale
"""

from follow import follow
import csv
import report
import tableformat

def select_columns(rows,indices):
    for row in rows:
        yield [row[index] for index in indices]

def convert_types(rows,types):
    for row in rows:
        yield [ func(val) for func,val in zip(types,row)]
        
def make_dicts(rows,headers):
    for row in rows:
        yield dict(zip(headers,row))

def filter_symbols(rows,names):
    for row in rows:
        # rows is a generator of dictionaries 
        # names is a Portfolio object. It implements __contains__
        # therefore we can do row['name'] in names:
        if row['name'] in names:
            yield row
            
def parse_stock_data(lines,pf):
    rows = csv.reader(lines)
    rows = select_columns(rows,[0,1,4])
    rows = convert_types(rows,[str, float, float])
    rows = make_dicts(rows,['name','price','change'])
    rows = filter_symbols(rows,pf)
    return rows

def ticker(portfile,logfile,fmt):
    formatter=tableformat.create_formatter(fmt)
    formatter.headings(['name','price','change'])
    pf    = report.read_portfolio(portfile)
    lines = follow(logfile)
    rows  = parse_stock_data(lines,pf)
    for row in rows:
        rowdata =[ str(rr) for rr in row.values() ]
        formatter.row(rowdata)

if __name__ == '__main__':
    # my portfolio file
    portfile='../Data/portfolio.csv'
    # logfile generated by stockmarket simulator
    logfile='../Data/stocklog.csv'
    # format for output
    fmt='html'
    ticker(portfile,logfile,fmt)
    
    